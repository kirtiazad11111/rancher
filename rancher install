##--helm install
cd /tmp
curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > install-helm.sh
chmod u+x install-helm.sh
./install-helm.sh
kubectl -n kube-system create serviceaccount tiller
kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller

##--ingress install

helm install --name my-release stable/nginx-ingress

##--install rancher
## https://rancher.com/docs/rancher/v2.x/en/installation/ha/helm-rancher/

helm repo add rancher-latest https://releases.rancher.com/server-charts/latest

kubectl create namespace cattle-system

# Install the CustomResourceDefinition resources separately
kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.9/deploy/manifests/00-crds.yaml

# Create the namespace for cert-manager
kubectl create namespace cert-manager

# Label the cert-manager namespace to disable resource validation
kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true

# Add the Jetstack Helm repository
helm repo add jetstack https://charts.jetstack.io

# Update your local Helm chart repository cache
helm repo update

# Install the cert-manager Helm chart
helm install \
  --name cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --version v0.9.1
  

# install certifacate issuer:
cat <<EOF > issuer.yaml
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: letsencrypt
  namespace: cattle-system
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: oliver.veits+letsencrypt-test@vocon-it.com
    privateKeySecretRef:
      name: letsencrypt
    http01: {}
EOF


kubectl apply -f issuer.yaml
# output: issuer.certmanager.k8s.io/letsencrypt created


  
# install rancher update the hostname to igress public ip $kubectl get svc

helm install --name rancher rancher-latest/rancher \
  --namespace cattle-system \
  --set hostname=example.34.70.191.246.nip.io \
kubectl -n cattle-system rollout status deploy/rancher

## update the public ip in certifcate  
cat <<EOF > certificate.yaml
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: test-letsencrypt
  namespace: cattle-system
spec:
  secretName: test-letsencrypt-tls
  issuerRef:
    name: letsencrypt
  commonName: example.34.70.191.246.nip.io
  acme:
    config:
      - http01:
          ingress: rancher
        domains:
          - example.34.70.191.246.nip.io
EOF

kubectl apply -f certificate.yaml
# output: certificate.certmanager.k8s.io/test-letsencrypt created


https://vocon-it.com/2019/01/08/kubernetes-automatic-tls-certificates-with-lets-encrypt/

  
